// @strict-types


&НаСервере
Процедура ПродажаТоваровНаСервере()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	
	Макет = Обработки.МеханизмЗапросов.ПолучитьМакет("Макет2");
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЦеныПоставщиковСрезПоследних.Поставщик,
		|	ПРЕДСТАВЛЕНИЕ(ЦеныПоставщиковСрезПоследних.Поставщик),
		|	ЦеныПоставщиковСрезПоследних.Номенклатура,
		|	ПРЕДСТАВЛЕНИЕ(ЦеныПоставщиковСрезПоследних.Номенклатура),
		|	ЦеныПоставщиковСрезПоследних.Цена
		|ИЗ
		|	РегистрСведений.ЦеныПоставщиков.СрезПоследних(, Поставщик = &Поставщик) КАК ЦеныПоставщиковСрезПоследних";
	
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры

&НаКлиенте
Процедура ПродажаТоваров(Команда)
	ПродажаТоваровНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЛитералЗначенийНаСервере()
	

	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	
	Макет = Обработки.МеханизмЗапросов.ПолучитьМакет("МакетЛитералЗначений");
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Номенклатура.Наименование,
		|	Номенклатура.Артикул
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Работа)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
КонецПроцедуры

&НаКлиенте
Процедура ЛитералЗначений(Команда)
	ЛитералЗначенийНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПакетныйЗапросНаСервере()
	

	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	
	Макет = Обработки.МеханизмЗапросов.ПолучитьМакет("МакетПЗ");
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПродажаТоваровТовары.Номенклатура,
		|	ПРЕДСТАВЛЕНИЕ(ПродажаТоваровТовары.Номенклатура),
		|	СУММА(ПродажаТоваровТовары.Количество) КАК Количество
		|ПОМЕСТИТЬ ТЧР
		|ИЗ
		|	Документ.ПродажаТоваров.Товары КАК ПродажаТоваровТовары
		|ГДЕ
		|	ПродажаТоваровТовары.Ссылка = &ДокументПродажи
		|СГРУППИРОВАТЬ ПО
		|	ПродажаТоваровТовары.Номенклатура,
		|	ПРЕДСТАВЛЕНИЕ(ПродажаТоваровТовары.Номенклатура)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЦеныПоставщиковСрезПоследних.Номенклатура,
		|	ПРЕДСТАВЛЕНИЕ(ЦеныПоставщиковСрезПоследних.Номенклатура),
		|	ЦеныПоставщиковСрезПоследних.Цена КАК Цена
		|ПОМЕСТИТЬ ЦЕНЫ
		|ИЗ
		|	РегистрСведений.ЦеныПоставщиков.СрезПоследних(, Номенклатура В
		|		(ВЫБРАТЬ
		|			ТЧР.Номенклатура
		|		ИЗ
		|			ТЧР КАК ТЧР)) КАК ЦеныПоставщиковСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЧР.Номенклатура,
		|	ТЧР.Количество,
		|	ЦЕНЫ.Цена
		|ИЗ
		|	ТЧР КАК ТЧР
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЦЕНЫ КАК ЦЕНЫ
		|		ПО ТЧР.Номенклатура = ЦЕНЫ.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТЧР
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ЦЕНЫ";
	
	Запрос.УстановитьПараметр("ДокументПродажи", ДокументПродажи);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
КонецПроцедуры

&НаКлиенте
Процедура ПакетныйЗапрос(Команда)
	ПакетныйЗапросНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВременныеТаблицыНаСервере()
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	
//	Макет = Обработки.МеханизмЗапросов.ПолучитьМакет("Макет1");
	МВТ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МВТ;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПродажаТоваровТовары.Номенклатура,
		|	ПРЕДСТАВЛЕНИЕ(ПродажаТоваровТовары.Номенклатура),
		|	СУММА(ПродажаТоваровТовары.Количество) КАК Количество
		|ПОМЕСТИТЬ ТЧР
		|ИЗ
		|	Документ.ПродажаТоваров.Товары КАК ПродажаТоваровТовары
		|ГДЕ
		|	ПродажаТоваровТовары.Ссылка = &ДокументПродажи
		|СГРУППИРОВАТЬ ПО
		|	ПродажаТоваровТовары.Номенклатура,
		|	ПРЕДСТАВЛЕНИЕ(ПродажаТоваровТовары.Номенклатура)";
	
	Запрос.УстановитьПараметр("ДокументПродажи", ДокументПродажи);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МВТ;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТЧР.Номенклатура,
		|	ТЧР.НоменклатураПредставление,
		|	ТЧР.Количество,
		|	ЦеныПоставщиковСрезПоследних.Цена
		|ИЗ
		|	ТЧР КАК ТЧР
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныПоставщиков.СрезПоследних КАК ЦеныПоставщиковСрезПоследних
		|		ПО ТЧР.Номенклатура = ЦеныПоставщиковСрезПоследних.Номенклатура";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Запрос.Текст =
		"УНИЧТОЖИТЬ ТЧР";
		
	РезультатЗапроса = Запрос.Выполнить();
	
	МВТ.Закрыть();
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
КонецПроцедуры

&НаКлиенте
Процедура ВременныеТаблицы(Команда)
	ВременныеТаблицыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИспользованиеСоединенийНаСервере()
	

	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	
	Макет = Обработки.МеханизмЗапросов.ПолучитьМакет("МакетДляСоединений");
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПоступлениеТоваров.Контрагент,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваров.Контрагент),
		|	ПоступлениеТоваров.Организация,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваров.Организация),
		|	ПоступлениеТоваровТовары.Номенклатура,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровТовары.Номенклатура),
		|	ПоступлениеТоваровТовары.Количество,
		|	ПоступлениеТоваровТовары.Сумма
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
		|		ПО ПоступлениеТоваровТовары.Ссылка = ПоступлениеТоваров.Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
КонецПроцедуры

&НаКлиенте
Процедура ИспользованиеСоединений(Команда)
	ИспользованиеСоединенийНаСервере();
КонецПроцедуры

&НаСервере
Процедура НезависимыеИсточникиНаСервере()
	

	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	
	Макет = Обработки.МеханизмЗапросов.ПолучитьМакет("МакетНИ");
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Контрагенты.Наименование,
		|	Контрагенты.Покупатель,
		|	Контрагенты.Поставщик,
		|	Номенклатура.Наименование,
		|	Номенклатура.Артикул,
		|	Номенклатура.ВидНоменклатуры
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура,
		|	Справочник.Контрагенты КАК Контрагенты";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
КонецПроцедуры

&НаКлиенте
Процедура НезависимыеИсточники(Команда)
	НезависимыеИсточникиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВиртуальныеТаблицыНаСервере()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	
	Макет = Обработки.МеханизмЗапросов.ПолучитьМакет("МакетВиртТ");
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЦеныПоставщиковСрезПоследних.Поставщик,
		|	ПРЕДСТАВЛЕНИЕ(ЦеныПоставщиковСрезПоследних.Поставщик),
		|	ЦеныПоставщиковСрезПоследних.Номенклатура,
		|	ПРЕДСТАВЛЕНИЕ(ЦеныПоставщиковСрезПоследних.Номенклатура),
		|	ЦеныПоставщиковСрезПоследних.Цена
		|ИЗ
		|	РегистрСведений.ЦеныПоставщиков.СрезПоследних(&ДатаСреза,) КАК ЦеныПоставщиковСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
КонецПроцедуры

&НаКлиенте
Процедура ВиртуальныеТаблицы(Команда)
	ВиртуальныеТаблицыНаСервере();
КонецПроцедуры



&НаСервере
Процедура ВыполнитьЗапросНаСервере()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	
	Макет = Обработки.МеханизмЗапросов.ПолучитьМакет("Макет");
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПоступлениеТоваровТовары.Номенклатура КАК Номенклатура,
		|	ПоступлениеТоваровТовары.Количество,
		|	ПоступлениеТоваровТовары.Сумма КАК Сумма
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
		|ИТОГИ
		|	СУММА(Сумма)
		|ПО
		|	ОБЩИЕ,
		|	Номенклатура ИЕРАРХИЯ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги");
	ОбластьНоменклатураИерархия = Макет.ПолучитьОбласть("НоменклатураИерархия");
	ОбластьНоменклатура = Макет.ПолучитьОбласть("Номенклатура");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаОбщийИтог.Следующий(); // Общий итог
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	ТабДок.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень());
	
	ВыборкаНоменклатура = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		Если ВыборкаНоменклатура.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии Тогда
			Область = ОбластьНоменклатураИерархия;
		Иначе
			Область = ОбластьНоменклатура;
		КонецЕсли;
	
		Область.Параметры.Заполнить(ВыборкаНоменклатура);
		ТабДок.Вывести(Область, ВыборкаНоменклатура.Уровень());
	
		ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
			ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапрос(Команда)
	ВыполнитьЗапросНаСервере();
КонецПроцедуры
